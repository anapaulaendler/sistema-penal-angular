// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SistemaPenal.Context;

#nullable disable

namespace SistemaPenal.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250527124424_Jesus")]
    partial class Jesus
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SistemaPenal.Entities.DiaDeTrabalho", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("Data");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Descricao");

                    b.Property<Guid>("PrisioneiroId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("PrisioneiroId");

                    b.ToTable("DiasDeTrabalho", (string)null);
                });

            modelBuilder.Entity("SistemaPenal.Entities.Estudo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("Data");

                    b.Property<string>("Materia")
                        .HasColumnType("longtext")
                        .HasColumnName("Materia");

                    b.Property<Guid>("PrisioneiroId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("PrisioneiroId");

                    b.ToTable("Estudos", (string)null);
                });

            modelBuilder.Entity("SistemaPenal.Entities.Funcionario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("CPF");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("DataNascimento");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("E-mail");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Nome");

                    b.Property<byte>("Papel")
                        .HasColumnType("tinyint unsigned")
                        .HasColumnName("Papel");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Senha");

                    b.HasKey("Id");

                    b.ToTable("Funcionarios", (string)null);
                });

            modelBuilder.Entity("SistemaPenal.Entities.Livro", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Isbn")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("char(11)")
                        .IsFixedLength();

                    b.Property<Guid>("PrisioneiroId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("PrisioneiroId");

                    b.ToTable("Livros", (string)null);
                });

            modelBuilder.Entity("SistemaPenal.Entities.Prisioneiro", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("AnoAtual")
                        .HasColumnType("int")
                        .HasColumnName("AnoAtual");

                    b.Property<int>("ContadorDeLivros")
                        .HasColumnType("int")
                        .HasColumnName("ContadorDeLivros");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("CPF");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("DataNascimento");

                    b.Property<DateTime>("DiaDeChegada")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("DiaDeChegada");

                    b.Property<DateTime>("DiaDeSaidaAtualizado")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("DiaDeSaidaAtualizado");

                    b.Property<DateTime>("DiaDeSaidaOriginal")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("DiaDeSaidaOriginal");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Nome");

                    b.HasKey("Id");

                    b.ToTable("Prisioneiros", (string)null);
                });

            modelBuilder.Entity("SistemaPenal.Entities.DiaDeTrabalho", b =>
                {
                    b.HasOne("SistemaPenal.Entities.Prisioneiro", "Prisioneiro")
                        .WithMany("DiasDeTrabalho")
                        .HasForeignKey("PrisioneiroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Prisioneiro");
                });

            modelBuilder.Entity("SistemaPenal.Entities.Estudo", b =>
                {
                    b.HasOne("SistemaPenal.Entities.Prisioneiro", "Prisioneiro")
                        .WithMany("Estudos")
                        .HasForeignKey("PrisioneiroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Prisioneiro");
                });

            modelBuilder.Entity("SistemaPenal.Entities.Livro", b =>
                {
                    b.HasOne("SistemaPenal.Entities.Prisioneiro", "Prisioneiro")
                        .WithMany("Livros")
                        .HasForeignKey("PrisioneiroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Prisioneiro");
                });

            modelBuilder.Entity("SistemaPenal.Entities.Prisioneiro", b =>
                {
                    b.Navigation("DiasDeTrabalho");

                    b.Navigation("Estudos");

                    b.Navigation("Livros");
                });
#pragma warning restore 612, 618
        }
    }
}
